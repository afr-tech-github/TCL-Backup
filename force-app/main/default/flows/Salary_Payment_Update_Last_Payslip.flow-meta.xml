<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Assign_advance_amount</name>
        <label>Assign advance amount</label>
        <locationX>435</locationX>
        <locationY>506</locationY>
        <assignmentItems>
            <assignToReference>advancevalue</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_1.AdvanceAmount__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>salaryadvanceId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_1.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_1</targetReference>
        </connector>
    </assignments>
    <environments>Default</environments>
    <formulas>
        <name>MonthCreate</name>
        <dataType>String</dataType>
        <expression>TEXT({!PayslipMonth}) + &apos; &apos; + Text({!PayslipYear})</expression>
    </formulas>
    <formulas>
        <name>PayslipMonth</name>
        <dataType>Number</dataType>
        <expression>CASE({!$Record.Salarycycle__c},
&quot;January&quot;,     1, 
&quot;February&quot;,    2, 
&quot;March&quot;,       3, 
&quot;April&quot;,       4, 
&quot;May&quot;,         5, 
&quot;June&quot;,        6, 
&quot;July&quot;,        7, 
&quot;August&quot;,      8, 
&quot;September&quot;,   9, 
 &quot;October&quot;,    10,
 &quot;November&quot;,   11,
 12)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>PayslipYear</name>
        <dataType>Number</dataType>
        <expression>value({!$Record.Year__c})</expression>
        <scale>0</scale>
    </formulas>
    <interviewLabel>Salary Payment | Update Last Payslip {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Salary Payment | Update Last Payslip</label>
    <loops>
        <name>Loop_1</name>
        <label>Loop 1</label>
        <locationX>629</locationX>
        <locationY>504</locationY>
        <collectionReference>Get_Salaryadvance</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_advance_amount</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_recordtype</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Employee_Process</name>
        <label>Get Employee Process</label>
        <locationX>633</locationX>
        <locationY>649</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Salary_Advance</targetReference>
        </connector>
        <filterLogic>(1 AND 2 AND 3 AND 4 AND 5) OR (1 AND 2 AND 3 AND 4 AND 6 AND 7)</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_recordtype.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Employeename__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Employee__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>End_date_Year__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>PayslipYear</elementReference>
            </value>
        </filters>
        <filters>
            <field>Start_Date_Month__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>PayslipMonth</elementReference>
            </value>
        </filters>
        <filters>
            <field>End_date_Month__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>End_date_Month__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>End_date_Month__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>PayslipMonth</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Employee_Process__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>get_record</name>
        <label>get record</label>
        <locationX>778</locationX>
        <locationY>354</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Salaryadvance</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Employee__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Employee__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Payslip__c</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_recordtype</name>
        <label>Get recordtype</label>
        <locationX>424</locationX>
        <locationY>632</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Employee_Process</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Promotion_Process</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Employee_Process__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Salaryadvance</name>
        <label>Get Salaryadvance</label>
        <locationX>784</locationX>
        <locationY>506</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_1</targetReference>
        </connector>
        <filterLogic>1 AND ( 2 OR 3) AND 4</filterLogic>
        <filters>
            <field>Month_Created__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>MonthCreate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>BOD Approved</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Accountant Paid</stringValue>
            </value>
        </filters>
        <filters>
            <field>Employee__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Employee__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Salary_Advance_Request__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UPdate_process</name>
        <label>UPdate Process</label>
        <locationX>791</locationX>
        <locationY>778</locationY>
        <inputAssignments>
            <field>ApprenticeshipAllowanceAmount__c</field>
            <value>
                <elementReference>Get_Employee_Process.ApprenticeshipAllowanceAmount__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ApprenticeshipProcess__c</field>
            <value>
                <elementReference>Get_Employee_Process.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>LastPayslip__c</field>
            <value>
                <elementReference>get_record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SalaryAdvanceAmount__c</field>
            <value>
                <elementReference>advancevalue</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Salary_Advance</name>
        <label>Update Salary Advance</label>
        <locationX>791</locationX>
        <locationY>649</locationY>
        <connector>
            <targetReference>UPdate_process</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>salaryadvanceId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Payslip__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Salary_Advance_Request__c</object>
    </recordUpdates>
    <start>
        <locationX>654</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>get_record</targetReference>
        </connector>
        <object>Payslip__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>advancevalue</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>3</scale>
    </variables>
    <variables>
        <name>salaryadvanceId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
